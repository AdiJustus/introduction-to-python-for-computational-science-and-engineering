* Overall strategy: separate Docker containers for development and mybinder

This repository uses a Dockerfile in the root directory for development
purposes. This includes translation of the source files (in book/*ipynb) to html
and pdf (using jupyterbook), which in turns needs a full latex installation.

That makes the container quite big.

For myBinder, we do not need latex, so in this directory, we attempt to have a
leaner definition of dependencies.

Binder should look in this directory (as it is called 'binder') and ignore the
global Dockerfile.

* Re-use dependencies from development environment in myBinder

I don't know if myBinder could read dependencies from a pyproject.toml file (and
couldn't find any documentation on this yet), nor if we can extract a
requirements.txt file from the pyproject.toml file automatically.

As a first step towards making the binder image leaner, I will stick to a definition via a Dockerfile, and leave out latex to make it smaller.

* Duplication between Dockerfile and ../Dockerfile

The general strategy will be to copy from ../Dockerfile, and comment out
unneeded bits and pieces.

In addition, myBinder would like creation of a user with UID 1000, which is added to the Dockerfile here.




